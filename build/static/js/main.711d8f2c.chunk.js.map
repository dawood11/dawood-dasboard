{"version":3,"sources":["Firebase/index.ts","Service/Requests.ts","TuyaApi/index.ts","DeviceList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","signInWithGoogle","onAuthStateChanged","authUser","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","signInWithPopup","GoogleAuthProvider","then","response","user","catch","error","console","log","abrupt","sent","stop","apply","this","arguments","signOutFirebase","_ref2","_callee2","_context2","signOut","postRequest","url","optionsParam","stringify","body","_args","length","undefined","JSON","request","objectSpread","method","_x","_x2","options","fetch","json","err","_x3","_x4","key","devices","tuyaEnpoints","authTuyaApi","authData","URLSearchParams","userName","password","countryCode","bizType","from","access_token","localStorage","setItem","fetchDevices","getItem","header","name","namespace","payloadVersion","payload","accessToken","code","parse","triggerDevice","_ref3","_callee3","deviceID","dataState","objIndex","_context3","value","devId","findIndex","obj","id","data","state","DeviceList","device","_useState","useState","_useState2","slicedToArray","deviceState","setDeviceState","handleTriggerBtn","newState","react_default","createElement","online","style","color","onClick","App","setUser","_useState3","_useState4","autenticationBtn","setAuthenticationBtn","_useState5","_useState6","tuyaDevices","setTuyaDevices","handleAuthenticateBtn","authenticated","displayName","handleTuyaBtn","tuyaData","className","map","dev_type","src_DeviceList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.711d8f2c.chunk.js","sourcesContent":["// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\nimport { GoogleAuthProvider, getAuth, onAuthStateChanged, signInWithPopup, signOut } from \"firebase/auth\";\n\nimport { initializeApp } from \"firebase/app\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig);\nexport const auth = getAuth();\nexport const authCheck = onAuthStateChanged(auth, (authUser) => {\n    if (authUser) {\n        return authUser;\n    } else {\n        return null;\n    }\n});\n\nexport const signInWithGoogle = async () => {\n    return await signInWithPopup(auth, new GoogleAuthProvider())\n        .then((response) => response.user)\n        .catch((error) => console.log(error));\n};\n\nexport const signOutFirebase = async () => await signOut(auth);\n","export const postRequest = async (url: string, optionsParam: any, stringify: boolean=true) => {\n    let body = JSON.stringify(optionsParam.body);\n    if (stringify === false) {\n        body = optionsParam.body;\n        \n    }\n    return await request(url, {\n        ...optionsParam,\n        method: 'POST',\n        body: body,\n    });\n};\n\nconst request = async (url: string, options: any) => {\n    return await fetch(url, options)\n        .then(response => response.json())\n        .then(response => response)\n        .catch(err => console.error(err));\n};","import { postRequest } from \"../Service/Requests\";\n\nlet key: string = '';\nlet devices: any = undefined;\n\nconst tuyaEnpoints = {\n    authenticate: 'https://px1.tuyaus.com/homeassistant/auth.do',\n    device: 'https://px1.tuyaeu.com/homeassistant/skill',\n};\n\nexport const authTuyaApi = async () => {\n    const authData = await postRequest(tuyaEnpoints.authenticate, {\n        body: new URLSearchParams({\n            userName: process.env.REACT_APP_TUYAAPI_USERNAME,\n            password: process.env.REACT_APP_TUYAAPI_PASSWORD,\n            countryCode: process.env.REACT_APP_TUYAAPI_COUNTRYCODE,\n            bizType: process.env.REACT_APP_TUYAAPI_BIZTYPE,\n            from: process.env.REACT_APP_TUYAAPI_FROM\n        })\n    }, false);\n\n    if (authData.access_token !== undefined) {\n        key = authData.access_token;\n        localStorage.setItem(\"key\", key);\n        return await fetchDevices(key);\n    } else {\n        key = localStorage.getItem(\"key\") as string;\n        return await fetchDevices(key);\n    }\n};\n\nconst fetchDevices = async (access_token: string) => {\n    devices = await postRequest(tuyaEnpoints.device, {\n        body: {\n            \"header\": {\n                \"name\": \"Discovery\",\n                \"namespace\": \"discovery\",\n                \"payloadVersion\": 1\n            },\n            \"payload\": {\n                \"accessToken\": access_token\n            }\n        }\n    })\n\n    if (devices.header.code !== 'FrequentlyInvoke' && devices.header.code !== 'DependentServiceUnavailable') {\n        localStorage.setItem(\"devices\", JSON.stringify(devices));\n    } else {\n        devices = JSON.parse(localStorage.getItem(\"devices\") as string);\n    }\n    return devices;\n};\n\nexport const triggerDevice = async (deviceID: string, dataState: boolean) => {\n    const status = await postRequest(tuyaEnpoints.device, {\n        body: {\n            \"header\": {\n                \"name\": \"turnOnOff\",\n                \"namespace\": \"control\",\n                \"payloadVersion\": 1\n            },\n            \"payload\": {\n                \"value\": dataState === false ? 1 : 0,\n                \"accessToken\": key,\n                \"devId\": deviceID\n            }\n        }\n    })\n\n    if (status.header.code !== 'SUCCESS') {\n        console.log('FAILED TRIGGER');\n        return dataState;\n    } else {\n        const objIndex = devices.payload.devices.findIndex(((obj: any) => obj.id === deviceID));\n        devices.payload.devices[objIndex].data.state = !dataState;\n        localStorage.setItem(\"devices\", JSON.stringify(devices));\n    }\n    return !dataState;\n};","import React, { useState } from 'react';\n\nimport { triggerDevice } from './TuyaApi';\n\ninterface Props {\n    device: any;\n}\nconst DeviceList = ({ device }: Props): JSX.Element => {\n    const [deviceState, setDeviceState] = useState<boolean>(device.data.state);\n    \n    const handleTriggerBtn = async () => {\n        const newState = await triggerDevice(device.id, deviceState)\n        await setDeviceState(newState);\n    };\n    \n    return (\n        <li id={device.id}>\n            {device.name},\n            {\n                device.data.online === true\n                    ? deviceState === true\n                        ? <span style={{ color: 'green' }}>På</span>\n                        : <span style={{ color: 'red' }}>Av</span>\n                    : <span style={{ color: 'red' }}>Offline</span>\n            }\n            <button\n                id={device.id + \"-btn\"}\n                onClick={handleTriggerBtn}\n            >\n                Trigger\n            </button>\n        </li>\n    );\n};\n\nexport default DeviceList;\n","import './App.css';\n\nimport React, { useState } from 'react';\nimport { signInWithGoogle, signOutFirebase } from './Firebase';\n\nimport DeviceList from './DeviceList';\nimport { authTuyaApi } from './TuyaApi';\n\nconst App: React.FC = () => {\n  const [user, setUser] = useState<string | null>(null);\n  const [autenticationBtn, setAuthenticationBtn] = useState<string>(\"Login\");\n  const [tuyaDevices, setTuyaDevices] = useState<any>(null);\n\n  const handleAuthenticateBtn = async () => {\n    if (user === null) {\n      const authenticated = await signInWithGoogle();\n      if (authenticated) {\n        setUser(authenticated.displayName);\n        setAuthenticationBtn(\"Logout\");\n      }\n    } else {\n      await signOutFirebase();\n      setUser(null);\n      setAuthenticationBtn(\"Login\");\n    }\n  };\n\n  const handleTuyaBtn = async () => {\n    const tuyaData = await authTuyaApi();\n    if (tuyaData.payload.devices !== null) {\n      setTuyaDevices(tuyaData.payload.devices);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      TEST2333 - {user}\n      <button onClick={handleAuthenticateBtn}>{autenticationBtn}</button>\n      {\n        user\n          ? <div>\n            <h1>get Tuya</h1>\n            <button onClick={handleTuyaBtn}>get Tuya data</button>\n\n            <h3>Switcher</h3>\n            <ul>\n              {\n                tuyaDevices === null\n                  ? null\n                  : tuyaDevices.map((device: any) => (\n                    device.dev_type === \"switch\"\n                      ? <DeviceList key={device.id} device={device} />\n                      : null\n                  ))\n              }\n            </ul>\n\n            <h3>Scener</h3>\n            <ul>\n              {\n                tuyaDevices === null\n                  ? null\n                  : tuyaDevices.map((device: any) => (\n                    device.dev_type === \"scene\"\n                      ? <DeviceList key={device.id} device={device} />\n                      : null\n                  ))\n              }\n            </ul>\n          </div>\n          : null\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}